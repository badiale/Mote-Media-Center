/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Arquivo.java
 *
 * Created on 26/05/2011, 20:59:56
 */

package org.motemediacenter.layout;

import java.awt.Color;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.util.Scanner;
import javax.swing.ImageIcon;

/**
 *
 * @author badiale
 */
public class Arquivo extends javax.swing.JPanel {
    private File f;
    private ListaArquivos parent;
    private LabelAnimator la;

    /** Creates new form Arquivo */
    public Arquivo(ListaArquivos parent, File f) {
        this.parent = parent;

        initComponents();

        this.f = f;
        lblDescricao.setText(f.getName());
        lblDescricao.setToolTipText(f.getName());
        String fileName = f.getName().toLowerCase();

        if (f.isDirectory()) {
            lblImagem.setIcon(new ImageIcon("resources/images/folder.png"));

        // audio
        } else if (
                fileName.endsWith(".mp3") ||
                fileName.endsWith(".wav") ||
                fileName.endsWith(".m4a")
                ) {
            lblImagem.setIcon(new ImageIcon("resources/images/audio.png"));
        // video
        } else if (
                fileName.endsWith(".mp4") ||
                fileName.endsWith(".wmv") ||
                fileName.endsWith(".avi") ||
                fileName.endsWith(".mkv") ||
                fileName.endsWith(".flv")
                ) {
            lblImagem.setIcon(new ImageIcon("resources/images/video.png"));

        // imagens
        } else if (
                fileName.endsWith(".png") ||
                fileName.endsWith(".jpg") ||
                fileName.endsWith(".jpeg") ||
                fileName.endsWith(".gif") ||
                fileName.endsWith(".bmp")
                ) {
            lblImagem.setIcon(new ImageIcon("resources/images/image.png"));

        // apresentacoes
        } else if (
                fileName.endsWith(".ppt")
                ) {
            lblImagem.setIcon(new ImageIcon("resources/images/presentation.png"));
        
        // arquivo desconhecido
        } else {
            lblImagem.setIcon(new ImageIcon("resources/images/generic.png"));
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblImagem = new javax.swing.JLabel();
        lblDescricao = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(100, 100));

        lblImagem.setName("lblImagem"); // NOI18N
        lblImagem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblImagemMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblImagemMouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                lblImagemMouseReleased(evt);
            }
        });

        lblDescricao.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDescricao.setText("Descrição");
        lblDescricao.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        lblDescricao.setName("lblDescricao"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblImagem, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblImagem, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblDescricao)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void lblImagemMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblImagemMouseReleased
        if (f.isDirectory()) {
            ListaArquivos larq = this.parent;
            larq.loadPath(f.getAbsolutePath());
        } else {
            try {
                try {
                    File recente_path = new File("resources/configs/recentes");
                    if (!recente_path.exists()) recente_path.createNewFile();
                    BufferedWriter out = new BufferedWriter(new FileWriter(recente_path, true));
                    out.write(f.getPath() + "\n");
                    out.close();
                } catch (Exception e) { System.err.println("Erro ao salvar arquivo recente: "+ e.getMessage()); }

                String[] cmd = new String[2];
                // TODO executar o mplayer corretamente
                //cmd[0] = "mplayer";
                //cmd[1] = "-quiet";
                //cmd[2] = "-slave";
                cmd[0] = "xdg-open";
                cmd[1] = f.getPath();
                Process player = Runtime.getRuntime().exec(cmd, null);
                Scanner s = new Scanner (player.getInputStream());
                while (s.hasNextLine()) System.out.println(s.nextLine());
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_lblImagemMouseReleased

    private void lblImagemMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblImagemMouseEntered
        parent.setVisible(false);
        Color c = new Color(0, 0, 130, 50);
        setBackground(c);
        parent.setVisible(true);

        if (lblDescricao.getFontMetrics(lblDescricao.getFont()).stringWidth(lblDescricao.getText()) > 76) {
            la = new LabelAnimator(parent, lblDescricao);
            la.start();
        } else { la = null; }
    }//GEN-LAST:event_lblImagemMouseEntered

    private void lblImagemMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblImagemMouseExited
        parent.setVisible(false);
        setBackground(null);
        parent.setVisible(true);

        if (la != null) {
            la.para();
            la = null;
        }
    }//GEN-LAST:event_lblImagemMouseExited


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lblDescricao;
    private javax.swing.JLabel lblImagem;
    // End of variables declaration//GEN-END:variables

}
